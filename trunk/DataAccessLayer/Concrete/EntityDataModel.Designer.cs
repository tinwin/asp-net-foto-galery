//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4952
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Data.Objects.DataClasses.EdmSchemaAttribute()]

// Original file name:
// Generation date: 24.03.2011 22:41:25
namespace Photogallery.DataAccessLayer.Concrete
{
    
    /// <summary>
    /// There are no comments for EntityContainer in the schema.
    /// </summary>
    public partial class EntityContainer : global::System.Data.Objects.ObjectContext
    {
        /// <summary>
        /// Initializes a new EntityContainer object using the connection string found in the 'EntityContainer' section of the application configuration file.
        /// </summary>
        public EntityContainer() : 
                base("name=EntityContainer", "EntityContainer")
        {
            this.OnContextCreated();
        }
        /// <summary>
        /// Initialize a new EntityContainer object.
        /// </summary>
        public EntityContainer(string connectionString) : 
                base(connectionString, "EntityContainer")
        {
            this.OnContextCreated();
        }
        /// <summary>
        /// Initialize a new EntityContainer object.
        /// </summary>
        public EntityContainer(global::System.Data.EntityClient.EntityConnection connection) : 
                base(connection, "EntityContainer")
        {
            this.OnContextCreated();
        }
        partial void OnContextCreated();
        /// <summary>
        /// There are no comments for PhotoSet in the schema.
        /// </summary>
        public global::System.Data.Objects.ObjectQuery<Photo> PhotoSet
        {
            get
            {
                if ((this._PhotoSet == null))
                {
                    this._PhotoSet = base.CreateQuery<Photo>("[PhotoSet]");
                }
                return this._PhotoSet;
            }
        }
        private global::System.Data.Objects.ObjectQuery<Photo> _PhotoSet;
        /// <summary>
        /// There are no comments for PhotoSet in the schema.
        /// </summary>
        public void AddToPhotoSet(Photo photo)
        {
            base.AddObject("PhotoSet", photo);
        }
    }
    /// <summary>
    /// There are no comments for photogalleryModel.Photo in the schema.
    /// </summary>
    /// <KeyProperties>
    /// PhotoId
    /// </KeyProperties>
    [global::System.Data.Objects.DataClasses.EdmEntityTypeAttribute(NamespaceName="photogalleryModel", Name="Photo")]
    [global::System.Runtime.Serialization.DataContractAttribute(IsReference=true)]
    [global::System.Serializable()]
    public partial class Photo : global::System.Data.Objects.DataClasses.EntityObject
    {
        /// <summary>
        /// Create a new Photo object.
        /// </summary>
        /// <param name="photoId">Initial value of PhotoId.</param>
        public static Photo CreatePhoto(int photoId)
        {
            Photo photo = new Photo();
            photo.PhotoId = photoId;
            return photo;
        }
        /// <summary>
        /// There are no comments for Property PhotoId in the schema.
        /// </summary>
        [global::System.Data.Objects.DataClasses.EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [global::System.Runtime.Serialization.DataMemberAttribute()]
        public int PhotoId
        {
            get
            {
                return this._PhotoId;
            }
            set
            {
                this.OnPhotoIdChanging(value);
                this.ReportPropertyChanging("PhotoId");
                this._PhotoId = global::System.Data.Objects.DataClasses.StructuralObject.SetValidValue(value);
                this.ReportPropertyChanged("PhotoId");
                this.OnPhotoIdChanged();
            }
        }
        private int _PhotoId;
        partial void OnPhotoIdChanging(int value);
        partial void OnPhotoIdChanged();
    }
}
